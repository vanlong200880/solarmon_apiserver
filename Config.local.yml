# System config
{
  server: {
    domain: [
      'techedge.vn',
      'www.techedge.vn',
      'http://techedge.vn',
      'http://www.techedge.vn',
      'https://techedge.vn',
      'https://www.techedge.vn',
      'http://solarmon.techedge.vn',
      'http://www.solarmon.techedge.vn',
      'http://solarmon.techedge.vn/',
      'http://www.solarmon.techedge.vn/',
      'https://solarmon.techedge.vn/',
      'https://solarmon.techedge.vn',
      'https://www.solarmon.techedge.vn',
      'https://www.solarmon.techedge.vn/',
      'solarmon.techedge.vn',
      'www.solarmon.techedge.vn',

      'http://backend.techedge.vn',
      'http://www.backend.techedge.vn',
      'http://backend.techedge.vn/',
      'http://www.backend.techedge.vn/',
      'https://backend.techedge.vn/',
      'https://backend.techedge.vn',
      'https://www.backend.techedge.vn',
      'https://www.backend.techedge.vn/',
      'backend.techedge.vn',
      'www.backend.techedge.vn',


      'localhost', 
      '103.110.86.197', 
      '103.110.86.197:80', 
      '103.110.86.197:443', 
      '103.110.86.197:80', 
      'localhost:3001', 
      'localhost:3002',
      'localhost:3003',
      'http://103.110.86.197:3001',
      '103.110.86.197:3001', 
      'localhost:80', 
      'http://103.110.86.197:80', 
      '103.110.86.197:3001', 
      ],
    context_path: 'api/',
    use_cluster: false,
    env : 'production',
    listenPort: 3002,
    protocol: 'http://',
    use_ssl: false,
    ssl_option: {
      listenPort: 8002,
      protocol: 'https://',
      privateKey: '/www/server/panel/vhost/cert/datareadings.focustech.vn/privkey.pem',
      certificate: '/www/server/panel/vhost/cert/datareadings.focustech.vn/fullchain.pem'
    },
    # put your server key here
    fcm_key: "AAAAuBr8G-o:APA91bGDy1OsXUO6McamN_AZVtWWQR8InQss2SDb80c7pTPX1oMbrqtXcpXDvkU5jKvV-9jEereaBISt6IeHyBEFYdfpGeH9mQ7wwMPvXdN-YoQ79GYb1K4LUeno93YAYPj7FzYmCspt",
    secret_token: {
      secret_key: '3PxPJByozT522IXRje6qolL',
      # dv phut
      timeout: 1440
    },
    smtpConfig: {
      host : "smtp.gmail.com",
      # host: "chv3-24859.azdigihost.com",
      # host: "email-smtp.us-west-2.amazonaws.com",
      secureConnection : false,
      port: 587, #v465
      auth : {
          user: 'techedge.solarmon@gmail.com',
          pass: 'ndwbpsbootfgmoby',
          # user: 'solarmon@techedge.vn',
          # pass: '123456ASD!@#$%^',
          # user: "AKIATUMNKF7MR5OEM3P4",
          # pass: "BA0mBkaJ+40n4pbHtFi7gisbA53ahtpEpJwk0AfPSA5B"
        }
    },
    fromEmailConfig: "solarmon@techedge.vn",
    toEmailConfig: [
      'solarmon@techedge.vn',
    ],
    encrypt: {
      algorithm: 'aes-256-ctr',
      secret_key: 'tzSZ5wAh18Vq'
    },
    token_param: {
      timeout: 4200,
      key: 'x-access-token'
    },
    # wkhtmltopdf_command: "/usr/bin/wkhtmltox-0.12.4/wkhtmltox/bin/wkhtmltopdf",
    wkhtmltopdf_command: '/usr/bin/wkhtmltopdf',
    # wkhtmltopdf_command: "wkhtmltopdf",
    tmp_dir: "tmp/",
    report_dir: "views/",
    report_ext: ".html",
    public_path: [
      # '/system/showImageAction',
      # '/system/getCode',
      # '/system/showBarcodeAction',
      # '/lims/getListMachine',
      # '/lims/getMachineById',
      # '/lims/updateMachineById',
      # '/lims/uploadDataLims'
    ]
  },
  i18n: {
    locales: ['en','vi'],
    defaultLocale: 'vi',
    directory: '/app/lang',
    extension: '.json',
  },
  mybatis: {
		dir_mapper: 'resourceMap/'
    
  },
  mysql: {
    host     :  'localhost', #'103.110.86.80',
    port     : 3306,
    user		: 'solarmon_admin',
    password     :  'Solarmon@123', #'sL4e2dripBS5X8Jc',
    database : 'solarmon',
    # The maximum number of connections to create at once. (Default: 10)
    connectionLimit : 20000, 
    typeCast : true,
    multipleStatements: true,
    # The maximum number of connection requests the pool will queue before returning an error from getConnection. If set to 0, there is no limit to the number of queued connection requests. (Default: 0)
    queueLimit: 0, 
    # The milliseconds before a timeout occurs during the connection acquisition. This is slightly different from connectTimeout, because acquiring a pool connection does not always involve making a connection. (Default: 10000)
    acquireTimeout: 10000, 
    waitForConnections: true
  },
  redis: {
    host: 'localhost',
		port: 6379,
		# socket_keepalive: true,
		connect_timeout: 3600000,
		# password: '05a171fae0d',
    password: '',
		# db: 1
  },
  elasticSearch: {
    # host : [ {
    #     # host : '192.168.2.4',
    #     host: 'localhost',
    #     # auth : 'elastic:flexElas.',
    #     # protocol : 'http',
    #     port : 9200
    #   }
    # ],

     host : [ {
        # host : '192.168.2.4',
        host: 'localhost',
        # auth : 'elastic:flexElas.',
        # protocol : 'http',
        #password: 'Pkh1qazxsw2',
        port : 6379
      }
    ],

    elasPageSize: 20, 
    index: 'cloud_solarmon'
  },

  # kafka: {
  # },
  # electronicInvoice: {
  #   viettel: 'viettel',
  #   viettel_api: {
  #     base: 'https://demo-sinvoice.viettel.vn:8443',
  #     create_invoice: '/InvoiceAPI/InvoiceWS/createInvoice/${p1}',
  #     cancel_invoice: '/InvoiceAPI/InvoiceWS/cancelTransactionInvoice',
  #     get_invoices: '/InvoiceAPI/InvoiceUtilsWS/getInvoices/${p1}',
  #     update_tax_declaration: '/InvoiceAPI/InvoiceUtilsWS/updateTaxDeclaration/',
  #     get_list_invoice_data_control: '/InvoiceAPI/InvoiceUtilsWS/getListInvoiceDataControl',
  #     update_payment_status: '/InvoiceAPI/InvoiceWS/updatePaymentStatus',
  #     cancel_payment_status: '/InvoiceAPI/InvoiceWS/cancelPaymentStatus',
  #     get_pdf: '/InvoiceAPI/InvoiceWS/createExchangeInvoiceFile',
  #     create_invoice_draft: '/InvoiceAPI/InvoiceWS/createOrUpdateInvoiceDraft/${p1}',
  #     preview_invoice_draft: '/InvoiceAPI/InvoiceUtilsWS/createInvoiceDraftPreview/${p1}'
  #   }
  # }
}